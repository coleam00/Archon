# Azure Production Docker Compose Configuration
# This file is optimized for Azure Container Instances deployment
# Usage: docker-compose -f docker-compose.azure.yml up -d

version: "3.8"

services:
  # Server Service (FastAPI + Socket.IO + Crawling)
  archon-server:
    image: ${ACR_LOGIN_SERVER}/archon-server:latest
    container_name: archon-server
    ports:
      - "8181:8181"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN}
      - SERVICE_DISCOVERY_MODE=azure
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ARCHON_SERVER_PORT=8181
      - ARCHON_MCP_PORT=8051
      - ARCHON_AGENTS_PORT=8052
      - AGENTS_ENABLED=${AGENTS_ENABLED:-true}
      - AZURE_CONTAINER_GROUP_NAME=${AZURE_CONTAINER_GROUP_NAME}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "python -c \"import urllib.request; urllib.request.urlopen(http://localhost:8181/health)\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    resources:
      limits:
        memory: 2G
        cpus: "1.0"
      reservations:
        memory: 1G
        cpus: "0.5"

  # Lightweight MCP Server Service (HTTP-based)
  archon-mcp:
    image: ${ACR_LOGIN_SERVER}/archon-mcp:latest
    container_name: archon-mcp
    ports:
      - "8051:8051"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN}
      - SERVICE_DISCOVERY_MODE=azure
      - TRANSPORT=sse
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - API_SERVICE_URL=http://archon-server:8181
      - AGENTS_ENABLED=${AGENTS_ENABLED:-true}
      - AGENTS_SERVICE_URL=http://archon-agents:8052
      - ARCHON_MCP_PORT=8051
      - ARCHON_SERVER_PORT=8181
      - ARCHON_AGENTS_PORT=8052
      - AZURE_CONTAINER_GROUP_NAME=${AZURE_CONTAINER_GROUP_NAME}
    restart: unless-stopped
    depends_on:
      archon-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "python -c \"import socket; s=socket.socket(); s.connect((localhost, 8051)); s.close()\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    resources:
      limits:
        memory: 512M
        cpus: "0.5"
      reservations:
        memory: 256M
        cpus: "0.25"

  # AI Agents Service (ML/Reranking)
  archon-agents:
    image: ${ACR_LOGIN_SERVER}/archon-agents:latest
    container_name: archon-agents
    ports:
      - "8052:8052"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN}
      - SERVICE_DISCOVERY_MODE=azure
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ARCHON_AGENTS_PORT=8052
      - ARCHON_SERVER_PORT=8181
      - AZURE_CONTAINER_GROUP_NAME=${AZURE_CONTAINER_GROUP_NAME}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "python -c \"import urllib.request; urllib.request.urlopen(http://localhost:8052/health)\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    resources:
      limits:
        memory: 2G
        cpus: "1.0"
      reservations:
        memory: 1G
        cpus: "0.5"

  # Frontend
  archon-frontend:
    image: ${ACR_LOGIN_SERVER}/archon-frontend:latest
    container_name: archon-ui
    ports:
      - "3737:3737"
    environment:
      - VITE_API_URL=https://${AZURE_DOMAIN}/api
      - VITE_ARCHON_SERVER_PORT=8181
      - ARCHON_SERVER_PORT=8181
      - HOST=0.0.0.0
      - PROD=true
      - VITE_ALLOWED_HOSTS=${AZURE_DOMAIN}
    restart: unless-stopped
    depends_on:
      archon-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3737"]
      interval: 30s
      timeout: 10s
      retries: 3
    resources:
      limits:
        memory: 512M
        cpus: "0.5"
      reservations:
        memory: 256M
        cpus: "0.25"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: archon-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./azure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./azure/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - archon-frontend
      - archon-server
      - archon-mcp
      - archon-agents
    restart: unless-stopped
    resources:
      limits:
        memory: 256M
        cpus: "0.25"
      reservations:
        memory: 128M
        cpus: "0.1"
