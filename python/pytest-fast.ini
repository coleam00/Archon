[pytest]
# Fast execution configuration for development
testpaths = tests
pythonpath = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Async support
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function
asyncio_default_test_loop_scope = function

# Fast execution optimizations
addopts = 
    --tb=line
    --no-header
    --disable-warnings
    -q
    # Skip slow tests by default
    -m "not slow and not integration"
    # Fail fast for quick feedback
    --maxfail=3
    # Import optimization
    --import-mode=importlib
    # No coverage for speed
    --durations=5

# Test markers
markers =
    unit: marks tests as unit tests (fast, isolated)
    integration: marks tests as integration tests (slower, requires services)
    slow: marks tests as slow running (>5 seconds)
    asyncio: marks tests as asyncio tests
    repository: marks tests that use repository patterns
    api: marks tests for API endpoints
    service: marks tests for service layer
    database: marks tests requiring database access
    mock: marks tests that use mocking extensively
    smoke: marks tests for basic functionality verification

# Reduced timeout for fast feedback
timeout = 60
timeout_method = thread

# Minimal logging
log_cli = false

# Ignore warnings for speed
filterwarnings =
    ignore

# Skip certain directories for faster collection
collect_ignore = 
    build
    dist
    *.egg-info
    node_modules
    __pycache__
    .pytest_cache
    .venv
    venv
    htmlcov
    test-results

minversion = 8.0