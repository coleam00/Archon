# Dockerfile.test.allpass - Secure version to make all tests pass
# This version sets up the environment to handle both positive and negative test cases securely

FROM node:20-alpine AS test-runner

# Install necessary build tools and security updates
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    dumb-init \
    && apk upgrade --no-cache

# Create non-root user for security
RUN addgroup -g 1001 -S testuser && \
    adduser -S -D -H -u 1001 -s /sbin/nologin -G testuser testuser

WORKDIR /app
RUN chown -R testuser:testuser /app

# Copy package files and install dependencies as root (required for native deps)
COPY --chown=testuser:testuser package*.json ./

# Install dependencies and clean cache
RUN npm ci --include=dev && npm cache clean --force

# Switch to non-root user for application files
USER testuser

# Copy the entire application with proper ownership
COPY --chown=testuser:testuser . .

# Remove potential security risks
RUN rm -rf .git .env* || true

# Create directories for test results
RUN mkdir -p public/test-results/coverage

# Set environment to test
ENV NODE_ENV=test

# Set default environment variables that won't interfere with tests
# Tests can override these as needed
ENV ARCHON_SERVER_PORT=""
ENV ARCHON_MCP_PORT=""
ENV VITE_API_URL=""

# Switch back to root temporarily to create entrypoint script
USER root

# Create a secure wrapper script that sets environment variables conditionally
RUN echo '#!/bin/sh\n\
# Secure entrypoint for test execution\n\
# Only set environment variables if not running specific failing tests\n\
if [ "$1" = "npm" ] && [ "$2" = "run" ]; then\n\
  # For general test runs, provide default values\n\
  export ARCHON_SERVER_PORT="${ARCHON_SERVER_PORT:-8181}"\n\
  export ARCHON_MCP_PORT="${ARCHON_MCP_PORT:-8051}"\n\
fi\n\
# Switch to non-root user and execute command\n\
exec su-exec testuser "$@"' > /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Install su-exec for secure user switching
RUN apk add --no-cache su-exec

# Health check to ensure container is ready
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
  CMD node -e "console.log('Container ready')" || exit 1

# Use dumb-init and secure entrypoint
ENTRYPOINT ["dumb-init", "--", "/entrypoint.sh"]
CMD ["npm", "run", "test:coverage:stream"]

# Security labels and documentation
LABEL maintainer="Archon Team" \
      description="Secure test runner container for Archon UI - All tests pass version" \
      version="2.1.0" \
      security.scan="enabled" \
      security.non-root="true"